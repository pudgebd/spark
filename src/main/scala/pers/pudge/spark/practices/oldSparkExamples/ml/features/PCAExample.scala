package pers.pudge.spark.practices.oldSparkExamples.ml.features

import org.apache.spark.ml.feature.PCA
import org.apache.spark.ml.linalg.Vectors
import org.apache.spark.sql.SparkSession

//在多元统计分析中，主成分分析（英语：Principal components analysis，PCA）是一种分析、简化数据集的技术。
// 主成分分析经常用于减少数据集的维数，同时保持数据集中的对方差贡献最大的特征。
// 这是通过保留低阶主成分，忽略高阶主成分做到的。这样低阶成分往往能够保留住数据的最重要方面。
// 但是，这也不是一定的，要视具体应用而定。由于主成分分析依赖所给数据，所以数据的准确性对分析结果影响很大。
object PCAExample {

  def main(args: Array[String]): Unit = {
    val spark = SparkSession
      .builder
      .appName("PCAExample")
      .master("local[4]")
      .getOrCreate()

    val data = Array(
      Vectors.sparse(5, Seq((1, 1.0), (3, 7.0))),
      Vectors.dense(2.0, 0.0, 3.0, 4.0, 5.0), //dense 数量必须等于 sparse size，这里是 5
      Vectors.dense(4.0, 0.0, 0.0, 6.0, 7.0)
    )
    var df = spark.createDataFrame(data.map(Tuple1.apply))
    df.show(false)
    //        +---------------------+
    //        |_1                   |
    //        +---------------------+
    //        |(5,  [1,3],  [1.0,7.0])  |
    //        |[2.0, 0.0, 3.0, 4.0, 5.0]|
    //        |[4.0, 0.0, 0.0, 6.0, 7.0]|
    //        +---------------------+

    df = df.toDF("features")
    df.show(false)
    //        +---------------------+
    //        |features             |
    //        +---------------------+
    //        |(5,[1,3],[1.0,7.0])  |
    //        |[2.0,0.0,3.0,4.0,5.0]|
    //        |[4.0,0.0,0.0,6.0,7.0]|
    //        +---------------------+

    //wiki: PCA相当于在气象学中使用的经验正交函数（EOF）,同时也类似于一个线性隐层神经网络。
    // 隐含层 K 个神经元的权重向量收敛后，将形成一个由前 K 个主成分跨越空间的基础。
    // 但是与PCA不同的是，这种技术并不一定会产生正交向量。
    //PCA是一种很流行且主要的的模式识别技术。然而，它并不能最优化类别可分离性[6] 。
    // 另一种不考虑这一点的方法是线性判别分析。
    val pca = new PCA()
      .setInputCol("features")
      .setOutputCol("pcaFeatures")
      .setK(4) //主成分数量，不能大于 Vectors.sparse size
      .fit(df)

    val result = pca.transform(df).select("pcaFeatures")
    result.show(false) //[] size 随 K 的值变大而变大，[] 中的值不变。
    //        +--------------------------------------------------------------------------------------------------+
    //        |pcaFeatures                                                                                       |
    //        +--------------------------------------------------------------------------------------------------+
    //        |[1.6485728230883807,-4.013282700516296,-5.524543751369388,0.1725834469163086,0.7908229294645973]  |
    //        |[-4.645104331781534,-1.1167972663619026,-5.524543751369387,0.17258344691630922,0.7908229294645972]|
    //        |[-6.428880535676489,-5.337951427775355,-5.524543751369389,0.17258344691630967,0.7908229294645973] |
    //        +--------------------------------------------------------------------------------------------------+

    spark.stop()
  }
}